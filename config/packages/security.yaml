security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\FrontUser:
            algorithm: auto
        App\Entity\BackUser:
            algorithm: auto
        
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        back:
            entity:
                class: App\Entity\BackUser
                property: email
        front:
            entity:
                class: App\Entity\FrontUser
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        back:
            lazy: true
            pattern: ^/back
            provider: back
            form_login:
                login_path: back_app_login
                check_path: back_app_login
                enable_csrf: true
            logout:
                path: back_app_logout
                target: back_home     
        front: 
            lazy: true
            pattern: ^/
            provider: front 
            form_login:
                login_path: front_app_login
                check_path: front_app_login
                enable_csrf: true
            logout:
                path: front_app_logout
                target: front_user
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/back/login$, roles: PUBLIC_ACCESS }
        - { path: ^/back, roles: ROLE_BACK_ADMIN }
        - { path: ^/front/mesreservation, roles: ROLE_USER }
        - { path: ^/front/reserver, roles: ROLE_USER }
